name: Manual NVII Dashboard Update

on:
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - dashboard-only
          - data-only
      
      commit_message:
        description: 'Custom commit message (optional)'
        required: false
        default: ''
      
      deploy_pages:
        description: 'Deploy to GitHub Pages'
        required: false
        default: true
        type: boolean

env:
  PYTHON_VERSION: '3.10'

jobs:
  manual-update:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create required directories
      run: |
        mkdir -p logs dashboard docs
        chmod 755 scripts/*.py
    
    - name: Run update based on type
      run: |
        echo "🔧 Running manual update: ${{ github.event.inputs.update_type }}"
        echo "📅 Update time: $(date)"
        
        case "${{ github.event.inputs.update_type }}" in
          "full")
            echo "🚀 Running full dashboard update"
            python3 scripts/weekly_update.py
            ;;
          "dashboard-only")
            echo "🎨 Running dashboard generation only"
            python3 scripts/dashboard_generator.py
            ;;
          "data-only")
            echo "📊 Running data analysis only"
            python3 scripts/total_returns_comparison.py
            ;;
          *)
            echo "❌ Unknown update type: ${{ github.event.inputs.update_type }}"
            exit 1
            ;;
        esac
        
        if [ $? -eq 0 ]; then
          echo "✅ Update completed successfully"
        else
          echo "❌ Update failed"
          exit 1
        fi
    
    - name: Generate update summary
      run: |
        echo "📋 Generating update summary..."
        
        # Create summary file
        cat > UPDATE_SUMMARY.md << EOF
        # Manual Update Summary
        
        **Update Type:** ${{ github.event.inputs.update_type }}
        **Triggered By:** @${{ github.actor }}
        **Time:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        **Workflow Run:** #${{ github.run_number }}
        
        ## Files Updated
        
        $(if [ -f "dashboard/index.html" ]; then echo "- ✅ Dashboard HTML"; else echo "- ❌ Dashboard HTML"; fi)
        $(if [ -f "docs/nvii_nvda_returns_comparison.md" ]; then echo "- ✅ Returns Analysis"; else echo "- ❌ Returns Analysis"; fi)
        $(if [ -f "docs/nvii_nvda_summary_stats.csv" ]; then echo "- ✅ Summary CSV"; else echo "- ❌ Summary CSV"; fi)
        $(if [ -f "docs/nvii_nvda_performance_chart.png" ]; then echo "- ✅ Performance Chart"; else echo "- ❌ Performance Chart"; fi)
        
        ## Current NVII Status
        
        $(if [ -f "docs/nvii_nvda_summary_stats.csv" ]; then
          python3 -c "
        import pandas as pd
        try:
            df = pd.read_csv('docs/nvii_nvda_summary_stats.csv')
            nvii = df[df['Ticker'] == 'NVII'].iloc[0]
            print(f'- **Current Price:** \${nvii[\"end_price\"]:.2f}')
            print(f'- **Total Return:** {nvii[\"total_return\"]*100:.2f}%')
            print(f'- **Dividend Yield:** {nvii[\"annualized_dividend_yield\"]*100:.1f}%')
            print(f'- **Volatility:** {nvii[\"annualized_volatility\"]*100:.1f}%')
        except:
            print('- Data not available')
          "
        else
          echo "- Data not available"
        fi)
        
        ---
        *Generated by manual GitHub Actions workflow*
        EOF
        
        # Display summary
        cat UPDATE_SUMMARY.md
    
    - name: Commit changes
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action (Manual)"
        
        # Add all changes
        git add -A
        
        # Check if there are changes
        if git diff --staged --quiet; then
          echo "📝 No changes to commit"
        else
          # Use custom message or default
          if [ -n "${{ github.event.inputs.commit_message }}" ]; then
            commit_msg="${{ github.event.inputs.commit_message }}"
          else
            commit_msg="🔧 Manual NVII Dashboard Update (${{ github.event.inputs.update_type }})

            Manually triggered update by @${{ github.actor }}
            Update type: ${{ github.event.inputs.update_type }}
            Workflow run: #${{ github.run_number }}
            
            $(date +"%Y-%m-%d %H:%M:%S %Z")"
          fi
          
          git commit -m "$commit_msg"
          git push
          echo "✅ Changes committed and pushed"
        fi
    
    - name: Deploy to GitHub Pages
      if: github.event.inputs.deploy_pages == 'true'
      uses: actions/deploy-pages@v4
      with:
        artifact_name: github-pages
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: manual-update-${{ github.run_number }}
        path: |
          dashboard/
          docs/
          UPDATE_SUMMARY.md
        retention-days: 7
    
    - name: Create job summary
      run: |
        echo "## 🚀 Manual NVII Dashboard Update Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Update Type:** ${{ github.event.inputs.update_type }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered By:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "**Time:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event.inputs.deploy_pages }}" == "true" ]; then
          echo "🌐 **Dashboard URL:** https://${{ github.repository_owner }}.github.io/NVII/" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Files Generated" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "dashboard/index.html" ]; then
          echo "- ✅ Interactive Dashboard" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "docs/nvii_nvda_returns_comparison.md" ]; then
          echo "- ✅ Performance Analysis Report" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "docs/nvii_nvda_summary_stats.csv" ]; then
          echo "- ✅ Summary Statistics" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Review the updated dashboard and analysis" >> $GITHUB_STEP_SUMMARY
        echo "2. Check the generated CSV files for detailed data" >> $GITHUB_STEP_SUMMARY
        echo "3. Set up the weekly automated updates if needed" >> $GITHUB_STEP_SUMMARY